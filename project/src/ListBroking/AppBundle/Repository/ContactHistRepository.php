<?php

namespace ListBroking\AppBundle\Repository;

use Doctrine\ORM\EntityRepository;
use ListBroking\AppBundle\Entity\Contact;
use Symfony\Component\Intl\Exception\MethodNotImplementedException;

/**
 * ContactHistRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContactHistRepository extends EntityRepository implements ContactRepositoryInterface
{
    /**
     * {@inheritdoc}
     */
    public function findByEmail(string $email): array
    {
        return $this->getEntityManager()
                    ->createQueryBuilder()
                    ->select('ch')
                    ->from('ListBrokingAppBundle:ContactHist', 'ch')
                    ->where('ch.email = :email')
                    ->setParameter('email', $email)
                    ->getQuery()
                    ->getResult();
    }

    /**
     * {@inheritdoc}
     */
    public function findByIdAndLead($id, $leadId)
    {
        throw new MethodNotImplementedException();
    }

    /**
     * {@inheritdoc}
     */
    public function findByLeadAndEmailAndOwner($leadId, $email, $owner)
    {
        throw new MethodNotImplementedException();
    }

    /**
     * {@inheritDoc}
     */
    public function getContactByIdWithoutConsentRevalidations(int $contactId): ?Contact
    {
        throw new MethodNotImplementedException('getContactByIdWithoutConsentRevalidations');
    }

    /**
     * {@inheritDoc}
     */
    public function getRandomContactsWithoutConsentRevalidations(
        int $year,
        string $countryCode,
        string $owner,
        int $limit,
        int $contactId = null
    ): array {
        throw new MethodNotImplementedException('getRandomContactsWithoutConsentRevalidations');
    }

    /**
     * {@inheritDoc}
     */
    public function saveContact(Contact $contact): Contact
    {
        throw new MethodNotImplementedException('saveContact');
    }
}
